@model SCML.Models.Content

@{
    ViewBag.Title = "Create New Content";
}



<h2>@ViewBag.Title</h2>
    @*@using (Html.BeginForm())*@ 
    @using (Html.BeginForm("Create", "Contents", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.type_id, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("type_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.type_id, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.title,"Title", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    
                    @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.summary,"Summary", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.summary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.summary, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.contents,"Content", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.contents, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.contents, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.large_image_path,"Image", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*<input type="file" name="FileUpload1" />*@
                    <input type="file" name="file1" id="file1" size="40" accept=".jpg , .png" /> 
                    @*@Html.EditorFor(model => model.large_image_path, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.large_image_path, "", new { @class = "text-danger" })*@
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.content_file_path,"Downloadable File", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="file2" id="file2" size="40" /> 

                    @*@Html.EditorFor(model => model.content_file_path, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.content_file_path, "", new { @class = "text-danger" })*@
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.href, "Href", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.href, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.sort_order,"Sort Order", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.sort_order, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.sort_order, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.publish_date,"Date", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.publish_date, new { @Value = @DateTime.Now.ToShortDateString() })*@
                    @Html.EditorFor(model => model.publish_date, new { htmlAttributes = new { @class = "form-control datecontrol" }})
                    @Html.ValidationMessageFor(model => model.publish_date, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    
                    <input type="submit" value="Create" class="btn btn-warning" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

